import { useGlobalContext } from "@/context/appContext";
import Head from "next/head";
import { useState, useEffect } from "react";
import styles from "@/styles/Home.module.css";
import btnStyles from "@/styles/ToggleBtn.module.css";
import { AiOutlineDelete } from "react-icons/ai";

export default function Home() {
  const { state, addToDo, removeToDo, toggleDarkMode } = useGlobalContext();
  const [todo, setTodo] = useState("");
  const { toDos, darkMode } = state;

  useEffect(() => {
    let theme;
    darkMode ? (theme = "dark") : (theme = "light");
    document.documentElement.setAttribute("data-theme", theme);
  }, [darkMode]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setTodo(e.target.value);
  };

  const handleAdd = () => {
    addToDo({ id: Date.now(), title: todo });
    setTodo("");
  };

  const handleDelete = (id: number) => {
    removeToDo(id);
    // console.log(typeof id);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.todos_container}>
          <div className={btnStyles.toogle_container}>
            <button
              onClick={toggleDarkMode}
              className={`${btnStyles.toggle_btn} ${
                darkMode && btnStyles.active
              }`}
            ></button>
          </div>

          <div className={styles.add_todo}>
            <input value={todo} type="text" onChange={(e) => handleChange(e)} />
            <button onClick={handleAdd}>Add</button>
          </div>

          {toDos?.map((todo) => {
            return (
              <div key={todo.id} className={styles.todo}>
                <h3>{todo.title}</h3>
                <AiOutlineDelete
                  className={styles.delete_icon}
                  onClick={() => handleDelete(todo.id)}
                />
              </div>
            );
          })}
        </div>
      </main>
    </>
  );
}
